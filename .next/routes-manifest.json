{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "rewrites": {
    "beforeFiles": [],
    "afterFiles": [],
    "fallback": []
  },
  "dynamicRoutes": [
    {
      "page": "/api/browser-storage/[linkId]",
      "regex": "^/api/browser\\-storage/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPlinkId": "nxtPlinkId"
      },
      "namedRegex": "^/api/browser\\-storage/(?<nxtPlinkId>[^/]+?)(?:/)?$"
    },
    {
      "page": "/api/letters/[linkId]",
      "regex": "^/api/letters/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPlinkId": "nxtPlinkId"
      },
      "namedRegex": "^/api/letters/(?<nxtPlinkId>[^/]+?)(?:/)?$"
    },
    {
      "page": "/letter/[linkId]",
      "regex": "^/letter/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPlinkId": "nxtPlinkId"
      },
      "namedRegex": "^/letter/(?<nxtPlinkId>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/auth/callback",
      "regex": "^/auth/callback(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/auth/callback(?:/)?$"
    },
    {
      "page": "/debug-letters",
      "regex": "^/debug\\-letters(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/debug\\-letters(?:/)?$"
    },
    {
      "page": "/debug-supabase",
      "regex": "^/debug\\-supabase(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/debug\\-supabase(?:/)?$"
    },
    {
      "page": "/debug-user-letters",
      "regex": "^/debug\\-user\\-letters(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/debug\\-user\\-letters(?:/)?$"
    },
    {
      "page": "/explore",
      "regex": "^/explore(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/explore(?:/)?$"
    },
    {
      "page": "/history",
      "regex": "^/history(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/history(?:/)?$"
    },
    {
      "page": "/migrate-data",
      "regex": "^/migrate\\-data(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/migrate\\-data(?:/)?$"
    },
    {
      "page": "/privacy",
      "regex": "^/privacy(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/privacy(?:/)?$"
    },
    {
      "page": "/reset-data",
      "regex": "^/reset\\-data(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/reset\\-data(?:/)?$"
    },
    {
      "page": "/send",
      "regex": "^/send(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/send(?:/)?$"
    },
    {
      "page": "/sitemap.xml",
      "regex": "^/sitemap\\.xml(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/sitemap\\.xml(?:/)?$"
    },
    {
      "page": "/terms",
      "regex": "^/terms(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/terms(?:/)?$"
    },
    {
      "page": "/test-auth",
      "regex": "^/test\\-auth(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/test\\-auth(?:/)?$"
    },
    {
      "page": "/test-database",
      "regex": "^/test\\-database(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/test\\-database(?:/)?$"
    },
    {
      "page": "/test-history",
      "regex": "^/test\\-history(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/test\\-history(?:/)?$"
    },
    {
      "page": "/test-simple-storage",
      "regex": "^/test\\-simple\\-storage(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/test\\-simple\\-storage(?:/)?$"
    },
    {
      "page": "/test-supabase",
      "regex": "^/test\\-supabase(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/test\\-supabase(?:/)?$"
    },
    {
      "page": "/test-user-identity",
      "regex": "^/test\\-user\\-identity(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/test\\-user\\-identity(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  }
}