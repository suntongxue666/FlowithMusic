"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/lib/letterStorage.ts":
/*!**********************************!*\
  !*** ./src/lib/letterStorage.ts ***!
  \**********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   letterStorage: () => (/* binding */ letterStorage)\n/* harmony export */ });\nclass LetterStorage {\n    generateLinkId() {\n        const now = new Date();\n        const timeStr = now.getFullYear().toString() + (now.getMonth() + 1).toString().padStart(2, '0') + now.getDate().toString().padStart(2, '0') + now.getHours().toString().padStart(2, '0') + now.getMinutes().toString().padStart(2, '0');\n        // Generate 6-character random alphanumeric string\n        const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n        let randomStr = '';\n        for(let i = 0; i < 6; i++){\n            randomStr += chars.charAt(Math.floor(Math.random() * chars.length));\n        }\n        return timeStr + randomStr;\n    }\n    getLetters() {\n        if (false) {}\n        try {\n            const stored = localStorage.getItem(this.storageKey);\n            if (!stored) return [];\n            const letters = JSON.parse(stored);\n            return letters.map((letter)=>({\n                    ...letter,\n                    createdAt: new Date(letter.createdAt)\n                }));\n        } catch (error) {\n            console.error('Failed to load letters:', error);\n            return [];\n        }\n    }\n    saveLetters(letters) {\n        if (false) {}\n        try {\n            localStorage.setItem(this.storageKey, JSON.stringify(letters));\n        } catch (error) {\n            console.error('Failed to save letters:', error);\n        }\n    }\n    addLetter(letter) {\n        const linkId = this.generateLinkId();\n        const newLetter = {\n            ...letter,\n            id: Date.now().toString() + Math.random().toString(36).substr(2, 9),\n            linkId: linkId,\n            createdAt: new Date()\n        };\n        const letters = this.getLetters();\n        letters.unshift(newLetter); // Add to beginning\n        // Keep only the latest 50 letters\n        if (letters.length > 50) {\n            letters.splice(50);\n        }\n        this.saveLetters(letters);\n        return newLetter;\n    }\n    getRecentLetters() {\n        let limit = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 6;\n        return this.getLetters().slice(0, limit);\n    }\n    getLetterByLinkId(linkId) {\n        const letters = this.getLetters();\n        return letters.find((letter)=>letter.linkId === linkId) || null;\n    }\n    constructor(){\n        this.storageKey = 'flowith-music-letters';\n    }\n}\nconst letterStorage = new LetterStorage();\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9saWIvbGV0dGVyU3RvcmFnZS50cyIsIm1hcHBpbmdzIjoiOzs7O0FBZ0JBLE1BQU1BO0lBR0lDLGlCQUF5QjtRQUMvQixNQUFNQyxNQUFNLElBQUlDO1FBQ2hCLE1BQU1DLFVBQVVGLElBQUlHLFdBQVcsR0FBR0MsUUFBUSxLQUMzQixDQUFDSixJQUFJSyxRQUFRLEtBQUssR0FBR0QsUUFBUSxHQUFHRSxRQUFRLENBQUMsR0FBRyxPQUM1Q04sSUFBSU8sT0FBTyxHQUFHSCxRQUFRLEdBQUdFLFFBQVEsQ0FBQyxHQUFHLE9BQ3JDTixJQUFJUSxRQUFRLEdBQUdKLFFBQVEsR0FBR0UsUUFBUSxDQUFDLEdBQUcsT0FDdENOLElBQUlTLFVBQVUsR0FBR0wsUUFBUSxHQUFHRSxRQUFRLENBQUMsR0FBRztRQUV2RCxrREFBa0Q7UUFDbEQsTUFBTUksUUFBUTtRQUNkLElBQUlDLFlBQVk7UUFDaEIsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUksR0FBR0EsSUFBSztZQUMxQkQsYUFBYUQsTUFBTUcsTUFBTSxDQUFDQyxLQUFLQyxLQUFLLENBQUNELEtBQUtFLE1BQU0sS0FBS04sTUFBTU8sTUFBTTtRQUNuRTtRQUVBLE9BQU9mLFVBQVVTO0lBQ25CO0lBRUFPLGFBQTRCO1FBQzFCLElBQUksS0FBNkIsRUFBRSxFQUFTO1FBRTVDLElBQUk7WUFDRixNQUFNQyxTQUFTQyxhQUFhQyxPQUFPLENBQUMsSUFBSSxDQUFDQyxVQUFVO1lBQ25ELElBQUksQ0FBQ0gsUUFBUSxPQUFPLEVBQUU7WUFFdEIsTUFBTUksVUFBVUMsS0FBS0MsS0FBSyxDQUFDTjtZQUMzQixPQUFPSSxRQUFRRyxHQUFHLENBQUMsQ0FBQ0MsU0FBaUI7b0JBQ25DLEdBQUdBLE1BQU07b0JBQ1RDLFdBQVcsSUFBSTNCLEtBQUswQixPQUFPQyxTQUFTO2dCQUN0QztRQUNGLEVBQUUsT0FBT0MsT0FBTztZQUNkQyxRQUFRRCxLQUFLLENBQUMsMkJBQTJCQTtZQUN6QyxPQUFPLEVBQUU7UUFDWDtJQUNGO0lBRUFFLFlBQVlSLE9BQXNCLEVBQVE7UUFDeEMsSUFBSSxLQUE2QixFQUFFO1FBRW5DLElBQUk7WUFDRkgsYUFBYVksT0FBTyxDQUFDLElBQUksQ0FBQ1YsVUFBVSxFQUFFRSxLQUFLUyxTQUFTLENBQUNWO1FBQ3ZELEVBQUUsT0FBT00sT0FBTztZQUNkQyxRQUFRRCxLQUFLLENBQUMsMkJBQTJCQTtRQUMzQztJQUNGO0lBRUFLLFVBQVVQLE1BQXdELEVBQWU7UUFDL0UsTUFBTVEsU0FBUyxJQUFJLENBQUNwQyxjQUFjO1FBQ2xDLE1BQU1xQyxZQUF5QjtZQUM3QixHQUFHVCxNQUFNO1lBQ1RVLElBQUlwQyxLQUFLRCxHQUFHLEdBQUdJLFFBQVEsS0FBS1UsS0FBS0UsTUFBTSxHQUFHWixRQUFRLENBQUMsSUFBSWtDLE1BQU0sQ0FBQyxHQUFHO1lBQ2pFSCxRQUFRQTtZQUNSUCxXQUFXLElBQUkzQjtRQUNqQjtRQUVBLE1BQU1zQixVQUFVLElBQUksQ0FBQ0wsVUFBVTtRQUMvQkssUUFBUWdCLE9BQU8sQ0FBQ0gsWUFBVyxtQkFBbUI7UUFFOUMsa0NBQWtDO1FBQ2xDLElBQUliLFFBQVFOLE1BQU0sR0FBRyxJQUFJO1lBQ3ZCTSxRQUFRaUIsTUFBTSxDQUFDO1FBQ2pCO1FBRUEsSUFBSSxDQUFDVCxXQUFXLENBQUNSO1FBQ2pCLE9BQU9hO0lBQ1Q7SUFFQUssbUJBQW1EO1lBQWxDQyxRQUFBQSxpRUFBZ0I7UUFDL0IsT0FBTyxJQUFJLENBQUN4QixVQUFVLEdBQUd5QixLQUFLLENBQUMsR0FBR0Q7SUFDcEM7SUFFQUUsa0JBQWtCVCxNQUFjLEVBQXNCO1FBQ3BELE1BQU1aLFVBQVUsSUFBSSxDQUFDTCxVQUFVO1FBQy9CLE9BQU9LLFFBQVFzQixJQUFJLENBQUNsQixDQUFBQSxTQUFVQSxPQUFPUSxNQUFNLEtBQUtBLFdBQVc7SUFDN0Q7O2FBNUVRYixhQUFhOztBQTZFdkI7QUFFTyxNQUFNd0IsZ0JBQWdCLElBQUloRCxnQkFBZSIsInNvdXJjZXMiOlsiL1VzZXJzL3N1bi9EZXNrdG9wL0Zsb3dpdGhNdXNpYy9zcmMvbGliL2xldHRlclN0b3JhZ2UudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW50ZXJmYWNlIE11c2ljTGV0dGVyIHtcbiAgaWQ6IHN0cmluZ1xuICB0bzogc3RyaW5nXG4gIG1lc3NhZ2U6IHN0cmluZ1xuICBzb25nOiB7XG4gICAgaWQ6IHN0cmluZ1xuICAgIHRpdGxlOiBzdHJpbmdcbiAgICBhcnRpc3Q6IHN0cmluZ1xuICAgIGFsYnVtQ292ZXI6IHN0cmluZ1xuICAgIHByZXZpZXdVcmw/OiBzdHJpbmdcbiAgICBzcG90aWZ5VXJsOiBzdHJpbmdcbiAgfVxuICBjcmVhdGVkQXQ6IERhdGVcbiAgbGlua0lkOiBzdHJpbmcgLy8gVVJMLWZyaWVuZGx5IElEIGZvciBzaGFyaW5nXG59XG5cbmNsYXNzIExldHRlclN0b3JhZ2Uge1xuICBwcml2YXRlIHN0b3JhZ2VLZXkgPSAnZmxvd2l0aC1tdXNpYy1sZXR0ZXJzJ1xuXG4gIHByaXZhdGUgZ2VuZXJhdGVMaW5rSWQoKTogc3RyaW5nIHtcbiAgICBjb25zdCBub3cgPSBuZXcgRGF0ZSgpXG4gICAgY29uc3QgdGltZVN0ciA9IG5vdy5nZXRGdWxsWWVhcigpLnRvU3RyaW5nKCkgKyBcbiAgICAgICAgICAgICAgICAgICAobm93LmdldE1vbnRoKCkgKyAxKS50b1N0cmluZygpLnBhZFN0YXJ0KDIsICcwJykgKyBcbiAgICAgICAgICAgICAgICAgICBub3cuZ2V0RGF0ZSgpLnRvU3RyaW5nKCkucGFkU3RhcnQoMiwgJzAnKSArIFxuICAgICAgICAgICAgICAgICAgIG5vdy5nZXRIb3VycygpLnRvU3RyaW5nKCkucGFkU3RhcnQoMiwgJzAnKSArIFxuICAgICAgICAgICAgICAgICAgIG5vdy5nZXRNaW51dGVzKCkudG9TdHJpbmcoKS5wYWRTdGFydCgyLCAnMCcpXG4gICAgXG4gICAgLy8gR2VuZXJhdGUgNi1jaGFyYWN0ZXIgcmFuZG9tIGFscGhhbnVtZXJpYyBzdHJpbmdcbiAgICBjb25zdCBjaGFycyA9ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSdcbiAgICBsZXQgcmFuZG9tU3RyID0gJydcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IDY7IGkrKykge1xuICAgICAgcmFuZG9tU3RyICs9IGNoYXJzLmNoYXJBdChNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBjaGFycy5sZW5ndGgpKVxuICAgIH1cbiAgICBcbiAgICByZXR1cm4gdGltZVN0ciArIHJhbmRvbVN0clxuICB9XG5cbiAgZ2V0TGV0dGVycygpOiBNdXNpY0xldHRlcltdIHtcbiAgICBpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ3VuZGVmaW5lZCcpIHJldHVybiBbXVxuICAgIFxuICAgIHRyeSB7XG4gICAgICBjb25zdCBzdG9yZWQgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSh0aGlzLnN0b3JhZ2VLZXkpXG4gICAgICBpZiAoIXN0b3JlZCkgcmV0dXJuIFtdXG4gICAgICBcbiAgICAgIGNvbnN0IGxldHRlcnMgPSBKU09OLnBhcnNlKHN0b3JlZClcbiAgICAgIHJldHVybiBsZXR0ZXJzLm1hcCgobGV0dGVyOiBhbnkpID0+ICh7XG4gICAgICAgIC4uLmxldHRlcixcbiAgICAgICAgY3JlYXRlZEF0OiBuZXcgRGF0ZShsZXR0ZXIuY3JlYXRlZEF0KVxuICAgICAgfSkpXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0ZhaWxlZCB0byBsb2FkIGxldHRlcnM6JywgZXJyb3IpXG4gICAgICByZXR1cm4gW11cbiAgICB9XG4gIH1cblxuICBzYXZlTGV0dGVycyhsZXR0ZXJzOiBNdXNpY0xldHRlcltdKTogdm9pZCB7XG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgPT09ICd1bmRlZmluZWQnKSByZXR1cm5cbiAgICBcbiAgICB0cnkge1xuICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0odGhpcy5zdG9yYWdlS2V5LCBKU09OLnN0cmluZ2lmeShsZXR0ZXJzKSlcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignRmFpbGVkIHRvIHNhdmUgbGV0dGVyczonLCBlcnJvcilcbiAgICB9XG4gIH1cblxuICBhZGRMZXR0ZXIobGV0dGVyOiBPbWl0PE11c2ljTGV0dGVyLCAnaWQnIHwgJ2NyZWF0ZWRBdCcgfCAnbGlua0lkJz4pOiBNdXNpY0xldHRlciB7XG4gICAgY29uc3QgbGlua0lkID0gdGhpcy5nZW5lcmF0ZUxpbmtJZCgpXG4gICAgY29uc3QgbmV3TGV0dGVyOiBNdXNpY0xldHRlciA9IHtcbiAgICAgIC4uLmxldHRlcixcbiAgICAgIGlkOiBEYXRlLm5vdygpLnRvU3RyaW5nKCkgKyBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMiwgOSksXG4gICAgICBsaW5rSWQ6IGxpbmtJZCxcbiAgICAgIGNyZWF0ZWRBdDogbmV3IERhdGUoKVxuICAgIH1cblxuICAgIGNvbnN0IGxldHRlcnMgPSB0aGlzLmdldExldHRlcnMoKVxuICAgIGxldHRlcnMudW5zaGlmdChuZXdMZXR0ZXIpIC8vIEFkZCB0byBiZWdpbm5pbmdcbiAgICBcbiAgICAvLyBLZWVwIG9ubHkgdGhlIGxhdGVzdCA1MCBsZXR0ZXJzXG4gICAgaWYgKGxldHRlcnMubGVuZ3RoID4gNTApIHtcbiAgICAgIGxldHRlcnMuc3BsaWNlKDUwKVxuICAgIH1cbiAgICBcbiAgICB0aGlzLnNhdmVMZXR0ZXJzKGxldHRlcnMpXG4gICAgcmV0dXJuIG5ld0xldHRlclxuICB9XG5cbiAgZ2V0UmVjZW50TGV0dGVycyhsaW1pdDogbnVtYmVyID0gNik6IE11c2ljTGV0dGVyW10ge1xuICAgIHJldHVybiB0aGlzLmdldExldHRlcnMoKS5zbGljZSgwLCBsaW1pdClcbiAgfVxuXG4gIGdldExldHRlckJ5TGlua0lkKGxpbmtJZDogc3RyaW5nKTogTXVzaWNMZXR0ZXIgfCBudWxsIHtcbiAgICBjb25zdCBsZXR0ZXJzID0gdGhpcy5nZXRMZXR0ZXJzKClcbiAgICByZXR1cm4gbGV0dGVycy5maW5kKGxldHRlciA9PiBsZXR0ZXIubGlua0lkID09PSBsaW5rSWQpIHx8IG51bGxcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgbGV0dGVyU3RvcmFnZSA9IG5ldyBMZXR0ZXJTdG9yYWdlKClcbmV4cG9ydCB0eXBlIHsgTXVzaWNMZXR0ZXIgfSJdLCJuYW1lcyI6WyJMZXR0ZXJTdG9yYWdlIiwiZ2VuZXJhdGVMaW5rSWQiLCJub3ciLCJEYXRlIiwidGltZVN0ciIsImdldEZ1bGxZZWFyIiwidG9TdHJpbmciLCJnZXRNb250aCIsInBhZFN0YXJ0IiwiZ2V0RGF0ZSIsImdldEhvdXJzIiwiZ2V0TWludXRlcyIsImNoYXJzIiwicmFuZG9tU3RyIiwiaSIsImNoYXJBdCIsIk1hdGgiLCJmbG9vciIsInJhbmRvbSIsImxlbmd0aCIsImdldExldHRlcnMiLCJzdG9yZWQiLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwic3RvcmFnZUtleSIsImxldHRlcnMiLCJKU09OIiwicGFyc2UiLCJtYXAiLCJsZXR0ZXIiLCJjcmVhdGVkQXQiLCJlcnJvciIsImNvbnNvbGUiLCJzYXZlTGV0dGVycyIsInNldEl0ZW0iLCJzdHJpbmdpZnkiLCJhZGRMZXR0ZXIiLCJsaW5rSWQiLCJuZXdMZXR0ZXIiLCJpZCIsInN1YnN0ciIsInVuc2hpZnQiLCJzcGxpY2UiLCJnZXRSZWNlbnRMZXR0ZXJzIiwibGltaXQiLCJzbGljZSIsImdldExldHRlckJ5TGlua0lkIiwiZmluZCIsImxldHRlclN0b3JhZ2UiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/letterStorage.ts\n"));

/***/ })

});